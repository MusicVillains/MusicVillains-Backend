name: Build and Deploy
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source code
      uses: actions/checkout@v3
      with:
          submodules: true
          token: ${{ secrets.ACTION_KEY }}
          
    - name: Install JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Gradle without using action
      run: |
        ./gradlew copyApplicationYml
        ./gradlew bootJar
      
    # - name: Build with Gradle
    #   uses: gradle/gradle-build-action@v2
    #   with:
    #     arguments: | 
    #       copyApplicationYml
    #       build
          
    - name: Upload Jars
      uses: actions/upload-artifact@v3.1.2
      with:
        name: jars
        path: build/libs/*.jar
    
  Delivery:
    runs-on: ubuntu-latest
    needs: Build
    steps:
    - name: Install sshpass   
      run: sudo apt install sshpass
    
    - name: Download Jars
      uses: actions/download-artifact@v2.1.1
      with:
        name: jars
        
    - name: Deliver Jars using SCP
      run: sshpass -p ${{ secrets.SSH_KEY }} scp -o StrictHostKeyChecking=no -P ${{ secrets.SSH_PORT }} *.jar ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_TARGET_IP }}:~/deploy/

  Deploy:
    runs-on: ubuntu-latest
    needs: [Build, Delivery]
    steps:
    - name: Install sshpass   
      run: sudo apt install sshpass
      
    - name: Execute remote commands
      run: |
        sshpass -p ${{ secrets.SSH_KEY }} ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_TARGET_IP }} "sudo fuser -k 8080/tcp || true"
        sshpass -p ${{ secrets.SSH_KEY }} ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_TARGET_IP }} "sudo nohup java -jar ~/deploy/*.jar > ~/nohup.log 2>&1 &"
        sshpass -p ${{ secrets.SSH_KEY }} ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_TARGET_IP }} "sudo echo "[$(date)] Deploy done" >> deploy_log.txt"

  
    
